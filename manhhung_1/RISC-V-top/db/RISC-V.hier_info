|control_unit
opcode[0] => opcode[0].IN1
opcode[1] => opcode[1].IN1
opcode[2] => opcode[2].IN1
opcode[3] => opcode[3].IN1
opcode[4] => opcode[4].IN1
opcode[5] => opcode[5].IN1
opcode[6] => opcode[6].IN1
funct7[0] => funct7[0].IN1
funct7[1] => funct7[1].IN1
funct7[2] => funct7[2].IN1
funct7[3] => funct7[3].IN1
funct7[4] => funct7[4].IN1
funct7[5] => funct7[5].IN1
funct7[6] => funct7[6].IN1
funct3[0] => funct3[0].IN1
funct3[1] => funct3[1].IN1
funct3[2] => funct3[2].IN1
RegWrite <= Main_decoder:main.RegWrite
ImmSrc[0] <= Main_decoder:main.ImmSrc
ImmSrc[1] <= Main_decoder:main.ImmSrc
ALUSrc <= Main_decoder:main.ALUSrc
Memwrite <= Main_decoder:main.Memwrite
ResultSrc <= Main_decoder:main.ResultSrc
ALUControl[0] <= ALU_decoder:decode_1.ALUControl
ALUControl[1] <= ALU_decoder:decode_1.ALUControl
ALUControl[2] <= ALU_decoder:decode_1.ALUControl
PCSrc <= <GND>


|control_unit|Main_decoder:main
opcode[0] => ~NO_FANOUT~
opcode[1] => ~NO_FANOUT~
opcode[2] => ~NO_FANOUT~
opcode[3] => ~NO_FANOUT~
opcode[4] => ~NO_FANOUT~
opcode[5] => ~NO_FANOUT~
opcode[6] => ~NO_FANOUT~
RegWrite <= <VCC>
ImmSrc[0] <= <GND>
ImmSrc[1] <= <GND>
ALUSrc <= <GND>
Memwrite <= <GND>
ResultSrc <= <GND>
Branch <= <GND>
ALUOp[0] <= <GND>
ALUOp[1] <= <VCC>


|control_unit|ALU_decoder:decode_1
ALUOp[0] => ~NO_FANOUT~
ALUOp[1] => ~NO_FANOUT~
funct3[0] => ShiftLeft0.IN18
funct3[1] => ShiftLeft0.IN17
funct3[2] => ShiftLeft0.IN16
funct7[0] => Add0.IN2
funct7[1] => Add0.IN1
funct7[2] => Add0.IN0
funct7[3] => Add0.IN7
funct7[4] => Add0.IN6
funct7[5] => Add0.IN5
funct7[6] => Add0.IN4
ALUControl[0] <= ALUControl[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
ALUControl[1] <= <GND>
ALUControl[2] <= <GND>


