module Equalizer #(
	parameter FILTER_NUM = 8,
	parameter DATA_BIT = 16,
	parameter GAIN_BIT = 5,
	parameter COUNT_BIT_NUM = 5
)(
	input clk,
	input rst_n,
	input [GAIN_BIT*FILTER_NUM-1:0] gain,
	input signed [DATA_BIT-1:0] data_in,
	output signed [DATA_BIT-1:0] data_out
);

wire [COUNT_BIT_NUM-1:0] count;
wire calculated;
counter counter(.clk(clk), .rst_n(rst_n), .count(count), .calculated(calculated));

generate
	genvar filter_index;
	for(filter_index = 0; filter_index < FILTER_NUM; filter_index = filter_index + 1) begin
		FIR_filter filter (
			.clk(clk),
			.rst_n(rst_n),
			.count(count),
			.calculated(calculated);
			.filter_data_in(data_in),
			.filter_data_out(data_out)	
		);
	end
endgenerate

endmodule
